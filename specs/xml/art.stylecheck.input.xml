<?xml version="1.0"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:novdoc-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE section PUBLIC
  "-//Novell//DTD NovDoc XML V1.0//EN" "novdocx.dtd"
[
  <!ENTITY % NOVDOC.DEACTIVATE.IDREF "INCLUDE">
]>
<article id="art.stylecheck.input" lang="en">
  <title>Input File Format Specification for Style Checker</title>
  <articleinfo>
    <author>
      <firstname>Stefan</firstname><surname>Knorr</surname>
    </author>
    <date><?dbtimestamp?></date>
  </articleinfo>

  <sect1>
    <title>Objectives</title>

    <para>
    </para>
  </sect1>

  <sect1>
    <title>Accepted File Types</title>

    <para>The style checker accepts only a single input file per invocation
      as input. The input file must be a valid DocBook 4.5 XML file using the
      UTF-8 standard. The DOCTYPE Declaration will be ignored by the style
      checker, so that any document written in a syntax-compatible file format
      may also be analyzed. One example of a syntax-compatible format is
      NovDoc 1.0.
      For best results, the file should also be profiled already, that is, they
      should be stripped of text that is relevant only for a particular other
      version of a product.
    </para>
    <para>The input file must not contain XIncludes or similar elements
      referencing other source files. It must not include entities or references
      to entity files. The following predeclared entities are allowed:
    </para>
    <itemizedlist>
      <listitem><para><literal>&amp;amp;</literal> (<literal>&amp;</literal>),</para></listitem>
      <listitem><para><literal>&amp;lt;</literal> (<literal>&lt;</literal>),</para></listitem>
      <listitem><para><literal>&amp;gt;</literal> (<literal>&gt;</literal>),</para></listitem>
      <listitem><para><literal>&amp;quot;</literal> (<literal>&quot;</literal>), and</para></listitem>
      <listitem><para><literal>&amp;apos;</literal> (<literal>&apos;</literal>)</para></listitem>
    </itemizedlist>
    <para>International characters must be written using the appropriate UTF-8
      bit sequence.
    </para>
  </sect1>
  <sect1>
    <title>Annotation Markup</title>

    <para>To be able to properly analyze documents and track down any findings
      to the source document, the style checker needs the input file to be
      annotated. There are two basic types of annotations:
    </para>
    <itemizedlist>
      <listitem><para>Origin Trackers&mdash;these annotations store information about
        where a particular string of text originated</para>
      </listitem>
      <listitem><para>Ignore Marks&mdash;these annotations store information about
        strings of text that should be ignored (or only partially evaluated)
        by the style checker</para>
      </listitem>
    </itemizedlist>
    <para>Annotations stored in the input as XML tags would lead to conflicting
      XML trees and are generally not flexible enough. Therefore, annotations
      are realized as XML processing instructions.
    </para>
    <para>Annotations must only occur after the DOCTYPE declaration. If in the
      following, the phrases <quote>all lines</quote> or
      <quote>every line</quote> are used, lines before the end of the
      DOCTYPE declaration should be assumed excluded.
    </para>
    <para>The basic structure of any annotation instruction follows the pattern
      <literal>&lt;?</literal> (opening sequence for processing instructions),
      <literal>ann </literal> (for <quote>annotation</quote>, namespace, similar
      to XML usage), <literal><replaceable>element </replaceable></literal>
      (element name, similar to XML usage), optional attribute value pairs
      <literal><replaceable>attribute</replaceable>="<replaceable>value</replaceable>" </literal>
      (again similar to XML usage), and <literal>?&gt;</literal>
      (closing sequence for processing
      instruction).
    </para>
    <para>If a closing annotation is necessary, follow the same pattern but
      precede the <emphasis>element name</emphasis> with a forward slash <literal>/</literal> and
      omit any attribute-value pairs.
    </para>
    <sect2>
      <title>Origin Trackers</title>

      <para>Origin trackers mark occurences of line breaks in the originating
        text as well as occurences of XIncludes and entities. This is
        necessary to be able to point out problems in specific originating
        files even though only a single file can be checked by the style
        checker at once.
      </para>
      <para>Origin trackers only have an opening instruction, as the next
        occurring origin tracker overwrites conflicting origin information.
      </para>

      <sect3>
        <title>Base Directory Tracker</title>

        <para>The optional basic directory tracker shall occur directly after
          the DOCTYPE definition. It defines a directory that all other
          referenced originating files are assumed to be relative to. The
          directory name must be preceded by the appropriate protocol. The
          only protocol that can be assumed to be supported is
          <literal>file://</literal>.
        </para>
        <screen>&lt;?ann origin dir="<replaceable>file:///home/example/book/</replaceable>" ?&gt;</screen>
      </sect3>

      <sect3>
        <title>File Trackers</title>

        <para>File trackers shall be positioned before the introduction of
          a new source of text. File trackers contain the name of the file.
          References to a DocBook XML file included via XInclude shall take
          this form:
        </para>
        <screen>&lt;?ann origin xml="<replaceable>example.xml</replaceable>" ?&gt;</screen>
        <para>References to external entity files shall take this form:</para>
        <screen>&lt;?ann origin entity="<replaceable>example.ent</replaceable>" ?&gt;</screen>
        <para>References to inline entities shall take this form:</para>
        <screen>&lt;?ann origin entity="<replaceable>example.xml</replaceable>" ?&gt;</screen>
      </sect3>

      <sect3>
        <title>Line Trackers</title>

        <para>Line trackers shall be positioned before a new line begins and
          after every file tracker. Line trackers reference the line number
          any string of text originates from. Line trackers shall take this
          form:
        </para>
        <screen>&lt;?ann origin line="<replaceable>12</replaceable>" ?&gt;</screen>
      </sect3>
      <sect3>
        <title>Combined File and Line Trackers</title>

        <para>Wherever a line and a file tracker directly follow each other,
          you may combine them into a single processing instruction. To improve
          readability, always order the file information before the line
          information, such as in the following example:
        </para>
        <screen>&lt;?ann origin xml="<replaceable>example.xml</replaceable>" line="<replaceable>12</replaceable>" ?&gt;</screen>
      </sect3>
    </sect2>
    <sect2>
      <title>Ignore Marks</title>

      <para>Ignore Marks can be set by users or processing applications to cause
        the style checker to ignore certain parts of a document's text. Unlike
        origin trackers, ignore marks always need to have a closing instruction.
      </para>
      <para>Most ignore marks will be set by users, so that they can ignore
        for instance false positives of the style checker. User-created ignore
        marks shall take this form:
      </para>
      <screen>&lt;?ann ignore ?&gt;Ignored word or phrase&lt;?ann /ignore ?&gt;</screen>
      <para>In some cases, it may be necessary to enrich the ignore mark with
        grammatical information. In these cases, use an ignore mark with the
        <literal>type</literal> attribute:
      </para>
      <screen>&lt;?ann ignore type="noun" ?&gt;Ignored word or phrase&lt;?ann /ignore ?&gt;</screen>
      <para>The type attribute may be set to any of the following values:
        <literal>noun</literal> (noun, brand name, short noun-like phrase),
        <literal>verb</literal> (verb, or verb and preposition),
        <literal>adjective</literal> (adjective, or word used adjectivally),
        <literal>adverb</literal> (adverb, or word used adverbally), or
        <literal>sentence</literal> (sentence, or large part of a sentence). If
        the word or phrase you would like the style checker to ignore does not
        fit any of these categories, never add a type attribute.
      </para>
      <para>Sometimes it can be necessary for the formatting application to add
        an ignore mark. This type of ignore marks is called
        <literal>auto-ignore</literal>, and apart from its name follows the
        the conventions described prior:
      </para>
      <screen>&lt;?ann auto-ignore ?&gt;Ignored word or phrase&lt;?ann /ignore ?&gt;
&lt;?ann auto-ignore type="sentence" ?&gt;Ignored word or phrase&lt;?ann /ignore ?&gt;</screen>

    </sect2>
  </sect1>
    <sect1>
    <title>Terminology</title>

    <para>The following table lists terminology used in this specification.
    </para>

    <informaltable>
      <tgroup cols="2">
        <colspec colnum="1" colname="1" colwidth="30*"/>
        <colspec colnum="2" colname="2" colwidth="70*"/>
        <thead>
          <row>
            <entry><para>Term</para></entry>
            <entry><para>Usage</para></entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><para>origin</para></entry>
            <entry><para>Typical DocBook documents are split up into smaller separate
              files. To create a style checker input file, these files have to be
              combined. The specific line and file that any string of text came
              from is called the <emphasis>origin</emphasis>.</para>
            </entry>
          </row>
          <row>
            <entry><para>input file</para></entry>
            <entry><para>A single flat XML that serves as the input for the style
              checker.</para>
            </entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

  </sect1>
</article>

