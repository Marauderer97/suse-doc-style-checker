<?xml version="1.0" encoding="UTF-8"?>
<terminology ignoredwords="(the|a|an|this|there|that|these|those|one|by|on|over|under|about|to|at|in|from|if|when|as|while|where|who|why|what)">

  <term>
    <accept>
      <word>32-bit</word>
    </accept>
    <patterngroup>
      <pattern1>32bit</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>32</pattern1>
      <pattern2>bit</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>3D</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">3d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>3[-\.]d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>three[-\.]*d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(three|3)\.?</pattern1>
      <pattern2>d\.?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>64-bit</word>
    </accept>
    <patterngroup>
      <pattern1>64bit</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>64</pattern1>
      <pattern2>bit</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>activate</word>
      <context>check boxes</context>
    </accept>
    <!-- Someone has been using the word checking option instead of check box. -->
    <patterngroup>
      <pattern1>((block|tick)(ing|ed|s)|check(ed|s))</pattern1>
      <contextpattern mode="fuzzy" where="2">((check|tick)(ing|s)?|(option|boxe?)s?|##@ui##)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>cho?os(es?|ing|n)</pattern1>
      <contextpattern mode="fuzzy" where="2">((check|tick)(ing|s)?|box(es)?)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>cho?os(es?|ing|n)</pattern1>
      <contextpattern look="before" mode="fuzzy" where="2">((check|tick)(ing|s)?|box(es)?)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>adapter</word>
    </accept>
    <patterngroup>
      <pattern1>adaptors?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>add-on</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Aa]dd-Ons?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ADD-ON[Ss]?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>addons?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>add</pattern1>
      <pattern2>ons?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>address book</word>
    </accept>
    <patterngroup>
      <pattern1>addressbooks?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>advice</word>
    </accept>
    <patterngroup>
      <pattern1>advise</pattern1>
      <contextpattern look="before">(an|the)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>advisory</word>
    </accept>
    <patterngroup>
      <pattern1>advicor(y|ies)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>advise</word>
    </accept>
    <patterngroup>
      <pattern1>advic(e[sd]|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>advice</pattern1>
      <contextpattern look="before">(we|suse|novell|attachmate|[\-a-z]*?ly)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>after</word>
      <context>time</context>
    </accept>
    <patterngroup>
      <pattern1>once</pattern1>
      <!-- *.ed is for constructs with verbs in past tense: "Once typed, ..."-->
      <contextpattern>(the|a|an|it|they|.*?ed)</contextpattern>
      <contextpattern match="negative" where="2">(second|minute|hour|day|week|year|half|quarter)</contextpattern>
    </patterngroup>
  </term>

  <!-- Not sure how to best get these in. -->
  <!-- <row>
    <entry>although</entry>
    <entry>while</entry>
    <entry>conjunction; only use <emphasis>while</emphasis> in the
      meaning of <quote>during the time that</quote>
    </entry>
  </row> -->
  <!-- <row>
    <entry>and</entry>
    <entry>while</entry>
    <entry>conjunction; only use <emphasis>while</emphasis> in the
      meaning of <quote>during the time that</quote>
    </entry>
  </row> -->

  <term>
    <accept>
      <word>appendixes</word>
    </accept>
    <patterngroup>
      <pattern1>appendices</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>architecture</word>
    </accept>
    <patterngroup>
      <pattern1>archs?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>audio CD</word>
    </accept>
    <patterngroup>
      <pattern1>audio-?cds?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>cd-?audios?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>cd</pattern1>
      <pattern2>audios?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>AOO</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Aa]oo</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ooo?o?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Apache OpenOffice</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">apache</pattern1>
      <pattern2>openoffice</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>apache</pattern1>
      <pattern2 case="keep">open[Oo]ffice</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>apache</pattern1>
      <pattern2 case="keep">openoffice</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>open-?office</pattern1>
      <contextpattern look="before" match="negative">apache</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>apache</pattern1>
      <pattern2>open</pattern2>
      <pattern3>office</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>open</pattern1>
      <pattern2>office</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>back-end</word>
    </accept>
    <patterngroup>
      <pattern1>backends?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>back up</word>
    </accept>
    <!-- Backed-up can be used as an adjective. -->
    <patterngroup>
      <pattern1>back(s|ing)-?up</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>back-?upp?(ed|ing)</pattern1>
        <!--  Adding s to the list of endings would erroneously also match the
          plural noun.
        -->
    </patterngroup>
    <patterngroup>
      <pattern1>back-?ups?</pattern1>
      <contextpattern look="before">to</contextpattern>
      <contextpattern match="negative">(and|or)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>back-?ups?</pattern1>
      <contextpattern>(them|these|this|it|the|a|an)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>backup</word>
    </accept>
    <patterngroup>
      <pattern1>back-ups?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>back</pattern1>
      <pattern2>ups?</pattern2>
      <contextpattern look="before">(the|a|local|remote|system|full|partial|automatic|manual|daily|hourly|monthly|yearly)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Bash</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">bash(?!-)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">BASH</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b\.a\.s\.h\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>basically</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>because of</word>
    </accept>
    <patterngroup>
      <pattern1>(due|owing)</pattern1>
      <pattern2>to</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Bluetooth</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">bluetooths?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>blue-tooths?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>blue</pattern1>
      <pattern2>tooths?</pattern2>
    </patterngroup>
  </term>

  <!--  Wi-Fi/Bluetooth card is more generic than Bluetooth card, so recommend
        that instead and hope for some common sense.
  -->

  <term>
    <accept>
      <word>boot disk</word>
    </accept>
    <patterngroup>
      <pattern1>boot-?dis[ck]s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>boot</pattern1>
      <pattern2>discs?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>boot loader</word>
    </accept>
    <patterngroup>
      <pattern1>boot-?loaders?</pattern1>
      <!-- avoid matching the expansion of GRUB here -->
      <contextpattern look="before" match="negative">unified</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>boot using PXE</word>
    </accept>
    <patterngroup>
      <pattern1>pxe-?boot(ing|ed)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>pxe</pattern1>
      <pattern2>boot(ing|ed)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>pxe-?boots?</pattern1>
      <contextpattern look="before">(to|not)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>pxe</pattern1>
      <pattern2>boots?</pattern2>
      <contextpattern look="before">(to|not)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Btrfs</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">btrfs</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">BTRFS</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b\.t\.r\.f\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b[eu]tterfs</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b[eu]tter</pattern1>
      <pattern2>(fs|filesystem)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>b[eu]tter</pattern1>
      <pattern2>file</pattern2>
      <pattern3>system</pattern3>
    </patterngroup>
  </term>

  <!-- Not sure how to check for this the right way. -->
  <!-- <term>
    <accept>
      <word>but</word>
    </accept>
    <patterngroup>
      <pattern1>while</pattern1>
      <contextpattern>(the|a|##@ui##|##@mono##|##@key##)</contextpattern>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>cannot</word>
    </accept>
    <patterngroup>
      <pattern1>can['ʼ]t</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>can</pattern1>
      <pattern2>not</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>CA</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Ca(?!\.)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">cas?(?!\.)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.a\.?s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>CD</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Cc]ds?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.d\.?s?</pattern1>
    </patterngroup>
  </term>

  <!-- Should probably be ordered before CD... -->
  <term>
    <accept>
      <word>CD-ROM</word>
    </accept>
    <patterngroup>
      <pattern1>c\.d\.-?r\.o\.m\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.?d\.?r\.?o\.?m\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.?d\.?</pattern1>
      <pattern2>r\.?o\.?m\.?s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>case-sensitive</word>
    </accept>
    <patterngroup>
      <pattern1>casesensitive</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>case</pattern1>
      <pattern2>sensitive</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>case-insensitive</word>
    </accept>
    <patterngroup>
      <pattern1>caseinsensitive</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>case</pattern1>
      <pattern2>insensitive</pattern2>
    </patterngroup>
  </term>

  <!-- Not sure how to match for this the right way: only permission-related -->
  <!-- <term>
    <accept>
      <word>can</word>
    </accept>
    <patterngroup>
      <pattern1>may</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>certificate authority</word>
    </accept>
    <patterngroup>
      <pattern1>certific(at(ion|ing)|ied)</pattern1>
      <pattern2>authorit(y|ies)</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>check box</word>
    </accept>
    <patterngroup>
      <pattern1>(check|tick)(ing)?-?(box(es)?|options?)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(tick(ing)?|checking)</pattern1>
      <pattern2>box(es)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>(check|tick)(ing)?</pattern1>
      <pattern2>options?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>checklist</word>
    </accept>
    <patterngroup>
      <pattern1>(check|tick)-lists?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(check|tick)</pattern1>
      <pattern2>lists?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>check mark</word>
    </accept>
    <patterngroup>
      <pattern1>(check|tick)-marks?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>tick</pattern1>
      <pattern2>marks?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>chipset</word>
    </accept>
    <patterngroup>
      <pattern1>chip-sets?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>chip</pattern1>
      <pattern2>sets?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>click</word>
    </accept>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
  </term>

  <!--  Seems to lead to crashes - maybe because of the &ndash; and some entity
        encoding issue?
  -->
  <term>
    <accept>
      <word>client/server</word>
    </accept>
    <patterngroup>
      <pattern1>client[-+]?server</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>client</pattern1>
      <pattern2>server</pattern2>
    </patterngroup>
  </term>

  <!-- This might be too generic. -->
  <term>
    <accept>
      <word>close</word>
      <context>windows</context>
    </accept>
    <patterngroup>
      <pattern1>(quit(s|t?ing)?|(abort|exit)(ed|ing|s)?|terminat(ed?|es|ing))</pattern1>
      <contextpattern mode="fuzzy" where="3">(window|dialog(ue))s?</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Common Unix Printing System</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Common</pattern1>
      <pattern2 case="keep">UNIX</pattern2>
      <pattern3 case="keep">Printing</pattern3>
      <pattern4 case="keep">System</pattern4>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">common</pattern1>
      <pattern2>unix</pattern2>
      <pattern3 case="keep">printing</pattern3>
      <pattern4 case="keep">system</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>command line</word>
    </accept>
    <patterngroup>
      <pattern1>command-?lines?</pattern1>
      <contextpattern match="negative">(tool|program(me)?|software|option|parameter)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>configuration</word>
    </accept>
    <patterngroup>
      <pattern1>conf(ig)?s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>configure</word>
    </accept>
    <patterngroup>
      <pattern1>conf(ig)?(ed|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>control center</word>
    </accept>
    <patterngroup>
      <pattern1>control-?centers?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">Control</pattern1>
      <pattern2 case="keep">Centers?</pattern2>
    </patterngroup>
  </term>

  <!-- Note sure how to test best -->
  <!-- <term>
    <accept>
      <word>could</word>
    </accept>
    <entry>may</entry>
    <entry>verb; use <emphasis>could</emphasis> to express a
      possibility, only use <emphasis>may</emphasis> to express
      permissions sought/given
    </entry>
  </term> -->

  <!-- Tricky. -->
  <!-- <term>
    <accept>
      <word>create a hard link</word>
    </accept>
    <patterngroup>
      <pattern1>hard-?links?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>create a symbolic link</word>
    </accept>
    <patterngroup>
      <pattern1>sym-?links?</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>CUPS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Cups</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">cups</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.?u\.?p\.?s\.?</pattern1>
      <pattern2>print(ing)?</pattern2>
      <pattern3>system</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.u\.p\.s\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>deactivate</word>
      <context>check boxes</context>
    </accept>
    <patterngroup>
      <pattern1>(un|de)-?(block|check|tick)(ing|ed|s)</pattern1>
      <contextpattern mode="fuzzy" where="2">((check|tick)(ing|s)?|(option|boxe?)s?|##@ui##)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>(un|de)-?((block|check|tick|deselect)(ing|ed|s)|ch[o]?os(e[s]?|ing|n))</pattern1>
      <contextpattern mode="fuzzy" where="2">((check|tick)(ing|s)?|box(es)?)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>delta RPM</word>
    </accept>
    <patterngroup>
      <pattern1>delta-?rpms?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>delta</pattern1>
      <pattern2 case="keep">[Rr]pms</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>deselect</word>
      <context>text or list entries</context>
    </accept>
    <patterngroup>
      <pattern1>((de-|un-?)select|(de|un)-?(block|choose?|highlight))(ing|s)?</pattern1>
      <contextpattern mode="fuzzy" where="3">(selection|text|entr(y|ie)|word)s?|##@mono##</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>remov(e[ds]?|ing)</pattern1>
      <pattern2>selections?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>remov(e[ds]?|ing)</pattern1>
      <pattern2>(a|the)</pattern2>
      <pattern3>selections?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>DHCP</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">dhcp</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">Dhcp</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>d\.h\.c\.p\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>dial-up</word>
    </accept>
    <patterngroup>
      <pattern1>dialup</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>dial</pattern1>
      <pattern2>up</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>dialog</word>
    </accept>
    <patterngroup>
      <pattern1>dialogues?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>dialog(box|window)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>dialog(ue)?</pattern1>
      <pattern2>(box|window)s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>directory</word>
    </accept>
    <patterngroup>
      <pattern1>(dir|folder)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>DNS</word>
    </accept>
    <patterngroup>
      <pattern1>d\.n\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>DNS</pattern1>
      <pattern2>name</pattern2>
      <pattern3>servers?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>double-click</word>
    </accept>
    <patterngroup>
      <pattern1>doubleclick(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>double</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>double-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>double</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>drop-down box</word>
    </accept>
    <patterngroup>
      <pattern1>drop-down</pattern1>
      <pattern2>(list|menu)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>drop-?down</pattern1>
      <contextpattern match="negative">box(es)?</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>combo-?box(es)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>drop</pattern1>
      <pattern2>down</pattern2>
      <pattern3>(boxe?|list|menu)s?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>drop</pattern1>
      <pattern2>downs?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>comb(ination|o)</pattern1>
      <pattern2>box(es)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>drop-down</pattern1>
      <pattern2>list</pattern2>
      <pattern3>box(es)?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>DVD</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Dd]vd</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>d\.v\.d\.?s?</pattern1>
    </patterngroup>
  </term>
  <term>
    <accept>
      <word>dynamic name server</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Dynamic</pattern1>
      <pattern2 case="keep">Name</pattern2>
      <pattern3 case="keep">Servers?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>e-book</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EBOOK[Ss]?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ebooks?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>electronic</pattern1>
      <pattern2>books?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>EPUB</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ee][Pp]ub</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ePUB</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>e-pub</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>e-mail</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EMAIL[Ss]?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>emails?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>electronic</pattern1>
      <pattern2>mails?</pattern2>
    </patterngroup>
  </term>

  <!-- Might overreach. -->
  <!-- <term>
    <accept/>
    <patterngroup>
      <pattern1>eas(il)?y</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>end user</word>
    </accept>
    <patterngroup>
      <pattern1>end-users?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Ethernet</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">ethernet</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Ethernet card</word>
    </accept>
    <patterngroup>
      <pattern1>wired</pattern1>
      <pattern2>cards?</pattern2>
    </patterngroup>
  </term>

  <!-- Not sure how to best test. -->
  <!-- <term>
    <accept>
      <word>etc.</word>
    </accept>
    <match/>
  </term> -->

  <!-- Spelled out "two," "three," "four" also relevant? -->
  <term>
    <accept>
      <word>Ext2</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EXT2</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ext2</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext-2</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext</pattern1>
      <pattern2>2</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Ext3</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EXT3</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ext3</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext-3</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext</pattern1>
      <pattern2>3</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Ext4</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EXT4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ext4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext-4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext</pattern1>
      <pattern2>4</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>file name</word>
    </accept>
    <patterngroup>
      <pattern1>file-?names?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>file server</word>
    </accept>
    <patterngroup>
      <pattern1>file-?servers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>file system</word>
    </accept>
    <patterngroup>
      <pattern1>file-?systems?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>flavor</word>
    </accept>
    <patterngroup>
      <pattern1>flavours?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>flash disk</word>
    </accept>
    <patterngroup>
      <pattern1>(flash|usb)</pattern1>
      <pattern2>(drive|stick|key|disc)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>usb</pattern1>
      <pattern2>disks?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>usb</pattern1>
      <pattern2>flash</pattern2>
      <pattern3>(dis[ck]|drive|stick|key)s?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>(flash|usb)-?(flash)?-?(dis[ck]|drive|stick|key)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>framebuffer</word>
    </accept>
    <patterngroup>
      <pattern1>frame-buffers?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>frame</pattern1>
      <pattern2>buffers?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>front-end</word>
    </accept>
    <patterngroup>
      <pattern1>frontends?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>front</pattern1>
      <pattern2>ends?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>FTP</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ff]tp(?!:)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>f\.t\.p\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>The GIMP</word>
    </accept>
    <patterngroup>
      <pattern1>g\.i\.m\.p\.?</pattern1>
    </patterngroup>
    <!-- Avoid matching executable names like gimp-print etc. -->
    <patterngroup>
      <pattern1 case="keep">[Gg]imp(?!-)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>GNOME</word>
    </accept>
    <!-- Avoid matching executable names like gnome-terminal etc. -->
    <patterngroup>
      <pattern1 case="keep">[Gg]nome(?!-)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.n\.o\.m\.e\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>GNU</pattern1>
      <pattern2>Networked</pattern2>
      <pattern3>Object</pattern3>
      <pattern4>Model</pattern4>
      <pattern5>Environment</pattern5>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>GRUB</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Gg]rub</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.r\.u\.b\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>graphical user interface</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Graphical</pattern1>
      <pattern2 case="keep">Users?</pattern2>
      <pattern3 case="keep">Interfaces?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>GUI</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Gg]uis?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.u\.i\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>gui</pattern1>
      <pattern2>interfaces?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>gui</pattern1>
      <pattern2>users?</pattern2>
      <pattern3>interfaces?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hard disk</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh][Dd][Dd]?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hardd?(is[ck]|rive)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hard</pattern1>
      <pattern2>(drive|disc)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>hard</pattern1>
      <pattern2>dis[ck]</pattern2>
      <pattern3>drives?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hard link</word>
    </accept>
    <patterngroup>
      <pattern1>hard-?links?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>home page</word>
    </accept>
    <patterngroup>
      <pattern1>home-?pages?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>host name</word>
    </accept>
    <patterngroup>
      <pattern1>hostnames?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>host-names?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hotplug</word>
    </accept>
    <patterngroup>
      <pattern1>(hot-plugg?(ed|s)?|hot-?(add|swapp?)(ed|s)?)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>(plugg?|add|swapp?)(ed|s)?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hotplugging</word>
    </accept>
    <patterngroup>
      <pattern1>(hot-plugging|hot-?(add|swapp?)(ing))</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>(plugg?|add|swapp?)ing</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hotpluggable</word>
    </accept>
    <patterngroup>
      <pattern1>(hot-plugg?[ai]ble|hotplugg?ible|hot-?(add|swapp?)[ai]ble)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>(plugg?|add|swapp?)[ai]ble</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>HTML</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh]tml</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>h\.t\.m\.l\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>HTML page</word>
    </accept>
    <patterngroup>
      <pattern1>HTML</pattern1>
      <pattern2>document</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>HTML</pattern1>
      <pattern2>web</pattern2>
      <pattern3>page</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>HTTP</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh]ttp(?!:)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>h\.t\.t\.p\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>HTTPS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh]ttps(?!:)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>h\.t\.t\.p\.s\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hypervisor</word>
    </accept>
    <patterngroup>
      <pattern1>hyper-vi[sz]ors?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hyper-?vizors?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hyper</pattern1>
      <pattern2>vi[sz]ors?</pattern2>
    </patterngroup>
  </term>

  <!-- Not sure what to check -->
  <!-- <term>
    <accept>
    <word>if</word>
  </accept>
  </term> -->

  <term>
    <accept>
      <word>indexes</word>
    </accept>
    <patterngroup>
      <pattern1>indices</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>infrared</word>
    </accept>
    <patterngroup>
      <pattern1>infra-red</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>infra</pattern1>
      <pattern2>red</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>init script</word>
    </accept>
    <patterngroup>
      <pattern1>initiali[sz]ations?</pattern1>
      <pattern2>scripts?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>init-?scripts?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>initialization</word>
    </accept>
    <patterngroup>
      <pattern1>inits?</pattern1>
      <contextpattern match="negative">scripts?</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>initialisations?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>initialize</word>
    </accept>
    <patterngroup>
      <pattern1>init(ed|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>initialis(e?[ds]?|ing)?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>installation source</word>
    </accept>
    <patterngroup>
      <pattern1>installation</pattern1>
      <pattern2>data</pattern2>
      <pattern3>sources?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>installation medium</word>
    </accept>
    <patterngroup>
      <pattern1>installation</pattern1>
      <pattern2>data</pattern2>
      <pattern3>medi(um|a)s?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Internet</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">internets?</pattern1>
    </patterngroup>
  </term>

  <!-- Sentence beginnings..? -->
  <!-- <term>
    <accept>
    <word>intranet</word>
  </accept>
    <patterngroup>
      <pattern1>Intranet</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>I/O port</word>
    </accept>
    <patterngroup>
      <pattern1>i[-\.]?o\.?</pattern1>
      <pattern2>ports?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>IPsec</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">IPSEC</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ii]psec</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">IPSec</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">i\.p\.s\.e\.c\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>IPv4</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ii]pv4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.p\.v\.?4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?4</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?</pattern2>
      <pattern3>4</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>IPv6</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ii]pv6</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.p\.v\.?6</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?6</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?</pattern2>
      <pattern3>6</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>journal</word>
    </accept>
    <patterngroup>
      <pattern1>journall(ed|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>just(?!-)</pattern1>
      <contextpattern match="negative" look="before">(not|must|should|ought)</contextpattern>
      <contextpattern match="negative">(after|before|next|as|to|need)</contextpattern>
      <contextpattern match="negative" mode="fuzzy" where="3">(one|two|three|four|five|six|seven|eight|nine|ten|[0-9].*)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>however</word>
    </accept>
    <patterngroup>
      <pattern1>just(?!-)</pattern1>
      <contextpattern look="before">(must|should|ought)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>only</word>
    </accept>
    <patterngroup>
      <pattern1>just(?!-)</pattern1>
      <contextpattern>need</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>K Desktop Environment</word>
    </accept>
    <patterngroup>
      <pattern1>kool</pattern1>
      <pattern2>desktop</pattern2>
      <pattern3>environment</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>k</pattern1>
      <pattern2 case="keep">desktop</pattern2>
      <pattern3>environment</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>k</pattern1>
      <pattern2>desktop</pattern2>
      <pattern3 case="keep">environment</pattern3>
    </patterngroup>
  </term>

  <!--  KDE desktop might be useful, even if slightly tautologic, so don't
        check.
  -->
  <term>
    <accept>
      <word>KDE</word>
    </accept>
    <patterngroup>
      <pattern1>kde</pattern1>
      <pattern2>desktop</pattern2>
      <pattern3>environment</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>k\.d\.e\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Kk]de</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Kdump</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">KDUMP</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">kdump</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Kprobes</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">KPROBES</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">kprobes</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>key combination</word>
    </accept>
    <patterngroup>
      <pattern1>key(board)?</pattern1>
      <pattern2>(accelerator|combo|shortcut)s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>LAN</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ll]an</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>l\.a\.n\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>left-click</word>
    </accept>
    <patterngroup>
      <pattern1>leftclick(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>left</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>left-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>left</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>left</pattern3>
      <pattern4>mouse</pattern4>
      <pattern5>button</pattern5>
    </patterngroup>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>left</pattern3>
      <pattern4>mouse</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>LibreOffice</word>
    </accept>
    <patterngroup>
      <pattern1>libre</pattern1>
      <pattern2>office</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ll]ibreoffice</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>L(ib)?O</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>license</word>
    </accept>
    <patterngroup>
      <pattern1>licenc(e[ds]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Linux</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">linux</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">LINUX</pattern1>
      <contextpattern look="before" match="negative">suse</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>list box</word>
    </accept>
    <patterngroup>
      <pattern1>list</pattern1>
      <pattern2>(field|area)s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>local host</word>
    </accept>
    <patterngroup>
      <pattern1>local-?hosts?</pattern1>
      <contextpattern look="before">(a|the)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>localhost</word>
    </accept>
    <patterngroup>
      <pattern1>local-hosts?</pattern1>
      <contextpattern look="before" match="negative">(a|the)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>local</pattern1>
      <pattern2>hosts?</pattern2>
      <contextpattern look="before" match="negative">(a|the)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>log file</word>
    </accept>
    <patterngroup>
      <pattern1>log-?files?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>login</word>
    </accept>
    <patterngroup>
      <pattern1>log-[io]ns?</pattern1>
      <contextpattern>(to|not)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign-[io]ns?</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <!-- <patterngroup>
      <pattern1>log</pattern1>
      <pattern2>[io]ns?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign</pattern1>
      <pattern2>[io]ns?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
      <contextpattern match="negative" >(the|a|an|to|at)</contextpattern>
    </patterngroup> -->
  </term>

  <term>
    <accept>
      <word>log in</word>
    </accept>
    <!-- don't match sentences like: "Note the > sign in the boot entry." -->
    <patterngroup>
      <pattern1>(sign|log)-?[io]n(ed|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>sign(ed|ing|s)?</pattern1>
      <pattern2>[io]n</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>on</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>log in to</word>
    </accept>
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>into</pattern2>
    </patterngroup>
    <!-- "log in at the console" is ~correct -->
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>in</pattern2>
      <pattern3>at</pattern3>
      <contextpattern where="3" mode="fuzzy" match="negative">console</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>logout</word>
    </accept>
    <patterngroup>
      <pattern1>log-o(ut|ff)s?</pattern1>
      <contextpattern>(to|not)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign-o(ut|ff)s?</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <!-- <patterngroup>
      <pattern1>log</pattern1>
      <pattern2>o(ut|ff)s?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign</pattern1>
      <pattern2>o(ut|ff)s?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
      <contextpattern match="negative">(the|a|an|of|from)</contextpattern>
    </patterngroup> -->
  </term>

  <term>
    <accept>
      <word>log out</word>
    </accept>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <patterngroup>
      <pattern1>(logg?|sign)(ed|ing)-?o(ut|ff)</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>(sign|log)-?o(ut|ff)(ed|ing)</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign(ed|ing|s)?</pattern1>
      <pattern2>o(ff|ut)</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>off</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>log out of</word>
    </accept>
    <!-- "log in from" is always correct, so this pattern's MMV. -->
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>o(ff|ut)</pattern2>
      <pattern3>from</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>loopback device</word>
    </accept>
    <patterngroup>
      <pattern1>loop-?back-?devices?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>loop-back</pattern1>
      <pattern2>devices?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>loop</pattern1>
      <pattern2>back</pattern2>
      <pattern3>devices?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>lowercase</word>
    </accept>
    <patterngroup>
      <pattern1>lower-case(s|ing)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>lower</pattern1>
      <pattern2>case(s|ing)?</pattern2>
    </patterngroup>
  </term>

  <!--  lowercase_d_ is almost always an adjective => avoid confusing writers.
  -->
  <term>
    <accept>
      <word>lowercased</word>
    </accept>
    <patterngroup>
      <pattern1>lower-cased</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>lower</pattern1>
      <pattern2>cased</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>mail server</word>
    </accept>
    <patterngroup>
      <pattern1>mail-?servers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Maildir</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">maildir</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mail-dir</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mail</pattern1>
      <pattern2>dir</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>mainboard</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">motherboards?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>m(ain|other)-boards?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>m(ain|other)</pattern1>
      <pattern2>boards?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>man page</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Man</pattern1>
      <pattern2>pages?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>man-?pages?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>metadata</word>
    </accept>
    <patterngroup>
      <pattern1>meta</pattern1>
      <pattern2>dates?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>meta-dat[ae]s?</pattern1>
    </patterngroup>
  </term>

  <!-- Don't check for menu, for now. -->

  <term>
    <accept>
      <word>middle-click</word>
    </accept>
    <patterngroup>
      <pattern1>mid-click(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mid(dle)?click(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mid(dle)?</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>mid(dle)?-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>mid(dle)?</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>mid(dle)?</pattern3>
      <pattern4>mouse</pattern4>
      <pattern5>button</pattern5>
    </patterngroup>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>mid(dle)?</pattern3>
      <pattern4>mouse</pattern4>
    </patterngroup>
  </term>

  <!-- <row>
    <entry>might</entry>
    <entry>may</entry>
    <entry>verb; use <emphasis>might</emphasis> to express a
      possibility, only use <emphasis>may</emphasis> to express
      permissions sought/given
    </entry>
  </row> -->

  <term>
    <accept>
      <word>mount point</word>
    </accept>
    <patterngroup>
      <pattern1>mount-?points?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>mouse button</word>
    </accept>
    <patterngroup>
      <pattern1>mouse-?(button|key)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mouse</pattern1>
      <pattern2>keys?</pattern2>
    </patterngroup>
  </term>

  <!-- Exclude -ing form since that is almost exclusively meant as a noun -->
  <term>
    <accept>
      <word>multitask</word>
    </accept>
    <patterngroup>
      <pattern1>multi-task(e[ds])?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>multi</pattern1>
      <pattern2>task(e[ds])?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>multitasking</word>
    </accept>
    <!--  Multitaskings is so delightfully incorrect... not sure what to best
          do with it. -->
    <patterngroup>
      <pattern1>multi-taskings?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>multi</pattern1>
      <pattern2>taskings?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>multiuser</word>
    </accept>
    <patterngroup>
      <pattern1>multi-user</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mouse</pattern1>
      <pattern2>user</pattern2>
    </patterngroup>
  </term>

  <!-- Exclude this and recommend need to instead. -->
  <!-- <row>
    <entry>must</entry>
    <entry>have to</entry>
    <entry>verb; see also <emphasis>need to</emphasis></entry>
  </row> -->

  <term>
    <accept>
      <word>name server</word>
    </accept>
    <patterngroup>
      <pattern1>name-?servers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>need to</word>
    </accept>
    <patterngroup>
      <pattern1>(ha(ve|d|s)|must)</pattern1>
      <pattern2>to</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>NFS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">N\.?f\.?s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>n\.f\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>nfs</pattern1>
      <pattern2>file</pattern2>
      <pattern3>systems?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>nfs</pattern1>
      <pattern2>file-?systems?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>NIS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">N\.?i\.?s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>n\.i\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>nis</pattern1>
      <pattern2>information</pattern2>
      <pattern3>services?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>nfs</pattern1>
      <pattern2>information-?services?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>obvious</pattern1>
      <contextpattern look="before" where="2">is</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>obvious</pattern1>
      <contextpattern>(due|owing|because|since|reasons?)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>obviously</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>OOo</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">OOo</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">O[Oo]\.?oo</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">oo\.?o?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>open</word>
    </accept>
    <patterngroup>
      <pattern1>open(ed|s|ing)</pattern1>
      <pattern2>up</pattern2>
    </patterngroup>
  </term>

  <!-- Not sure this helps much, since this name is outdated anyway -->
  <!-- <term>
    <accept>
      <word>OpenOffice.org</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Openoffice\.?org</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>openoffice</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>open(?!-)</pattern1>
      <pattern2>office</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>open(?!-)</pattern1>
      <pattern2>office</pattern2>
      <pattern3>org</pattern3>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>openSUSE</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Open[Ss][Uu][Ss][Ee]</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>open-suse</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>open(?!-)</pattern1>
      <pattern2>suse</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>open source</word>
    </accept>
    <patterngroup>
      <pattern1>open-?source</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>open</pattern1>
      <pattern2 case="keep">Source</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>paravirtualized</word>
    </accept>
    <patterngroup>
      <pattern1>para-?virtualised</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>para-virtualized</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>para</pattern1>
      <pattern2>virtuali[sz]ed</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>path name</word>
    </accept>
    <patterngroup>
      <pattern1>path-?names?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>please</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>plug in</word>
    </accept>
    <patterngroup>
      <pattern1>plugg?(ed|s|ing)-?in</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>plug-?inn?(ed|ing)</pattern1>
    </patterngroup>
    <!-- FIXME: need to check for context here, too -->
  </term>

  <term>
    <accept>
      <word>pop-up</word>
    </accept>
    <patterngroup>
      <pattern1>pop</pattern1>
      <pattern2>up</pattern2>
      <contextpattern look="before">(the|a)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>popup</pattern1>
      <contextpattern look="before">(the|a)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>on port</word>
    </accept>
    <patterngroup>
      <pattern1>at</pattern1>
      <pattern2>ports?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>(at|on)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>ports?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>PostScript</word>
    </accept>
    <patterngroup>
      <pattern1>post</pattern1>
      <pattern2>script</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">POSTSCRIPT</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Pp]ostscript</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>preconfigure</word>
    </accept>
    <patterngroup>
      <pattern1>pre</pattern1>
      <pattern2>configure(es?|ing)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>pre-configure(es?|ing)</pattern1>
    </patterngroup>
  </term>

  <!--  preconfigure_d_ is almost always an adjective, thus avoid confusing
        writers. -->
  <term>
    <accept>
      <word>preconfigured</word>
    </accept>
    <patterngroup>
      <pattern1>pre</pattern1>
      <pattern2>configured</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>pre-configured</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>print</word>
    </accept>
    <patterngroup>
      <pattern1>print(s|ed|ing)</pattern1>
      <pattern2>out</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>print(s|ed|ing)</pattern1>
      <contextpattern mode="fuzzy" where="3">out</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>print queue</word>
    </accept>
    <patterngroup>
      <pattern1>print(er|ing)</pattern1>
      <pattern2>queues?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>print(er|ing)?-queues?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>print queue</word>
    </accept>
    <patterngroup>
      <pattern1>print(er|ing)</pattern1>
      <pattern2>spoolers?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>print(er|ing)?-spoolers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>press</word>
      <context>keys or mouse buttons</context>
    </accept>
    <patterngroup>
      <pattern1>(hitt?|punch|depress|strike)(ed|s|ing)?</pattern1>
      <contextpattern mode="fuzzy" where="3">(##@key##|key)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>(hitt?|punch|depress|strike)(ed|s|ing)?</pattern1>
      <contextpattern mode="fuzzy" where="3" look="before">(##@key##|key)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>PXE</word>
    </accept>
    <patterngroup>
      <pattern1>p\.x\.e\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>pixie</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Pp]xe</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>PXE boot</word>
    </accept>
    <!-- This does not help within titles. -->
    <!-- <patterngroup>
      <pattern1>pxe</pattern1>
      <pattern2 case="keep">Boots?</pattern2>
    </patterngroup> -->
    <patterngroup>
      <pattern1>pxe-?boots?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>quit</word>
      <context>applications</context>
    </accept>
    <patterngroup>
      <pattern1>(clos(e[ds]?|ing)|(abort|exit)(ed|ing|s)?)</pattern1>
      <contextpattern mode="fuzzy" where="3">(program(me)?|software|application)s?</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>RAM</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Rr]am</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>r\.a\.m\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>RAM disk</word>
    </accept>
    <patterngroup>
      <pattern1>ram</pattern1>
      <pattern2 case="keep">(drive|disc)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>ram-?d(rive|is[ck])s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>README</word>
    </accept>
    <patterngroup>
      <pattern1>read</pattern1>
      <pattern2>mes?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Rr]ead-?[Mm]es?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>read-only</word>
    </accept>
    <patterngroup>
      <pattern1>read</pattern1>
      <pattern2>only</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>r(ead|\.)?o(nly|\.)?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>reconfigure</word>
    </accept>
    <patterngroup>
      <pattern1>re</pattern1>
      <pattern2>configur(e[sd]?|ing)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>re-configur(e[sd]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>re-create</word>
    </accept>
    <patterngroup>
      <pattern1>re</pattern1>
      <pattern2>creat(e[sd]?|ing)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>recreat(e[sd]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>register</word>
    </accept>
    <patterngroup>
      <pattern1>sign(ed|s|ing)?</pattern1>
      <pattern2>up</pattern2>
    </patterngroup>
    <!-- check for sign-up/signup, too? -->
  </term>

  <!-- punted -->
  <!-- <row>
    <entry>(to) register at sth.</entry>
    <entry/>
    <entry>verb; register at a system</entry>
  </row>
  <row>
    <entry>(to) register for sth.</entry>
    <entry/>
    <entry>verb; register for a service</entry>
  </row> -->

  <term>
    <accept>
      <word>remove at runtime</word>
    </accept>
    <patterngroup>
      <pattern1>hot-remov(e[ds]?|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>remov(e[ds]?|ing)</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>removable at runtime</word>
    </accept>
    <patterngroup>
      <pattern1>hot-remove?[ai]ble</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>remove?[ai]ble</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>right-click</word>
    </accept>
    <patterngroup>
      <pattern1>rightclick(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>right</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>right-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>right</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>right</pattern3>
      <pattern4>mouse</pattern4>
      <pattern5>button</pattern5>
    </patterngroup>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>the</pattern2>
      <pattern3>right</pattern3>
      <pattern4>mouse</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>RPM</word>
    </accept>
    <patterngroup>
      <pattern1>r\.p\.m\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Rr]pms?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>runlevel</word>
    </accept>
    <patterngroup>
      <pattern1>run-levels?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>run</pattern1>
      <pattern2>levels?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>runtime</word>
    </accept>
    <patterngroup>
      <pattern1>run-times?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>run</pattern1>
      <pattern2>times?</pattern2>
    </patterngroup>
  </term>

  <!-- This makes some questionable recommendations, disable for now. -->
  <!-- <term>
    <accept>
      <word>save</word>
    </accept>
    <patterngroup>
      <pattern1>stor(e[sd]?|ing)</pattern1>
    </patterngroup>
  </term> -->


<!-- Avoid this complexity for now -->
<!-- <row>
    <entry>(to) save sth. as sth.</entry>
    <entry/>
    <entry>verb; when either saving a file with a specific name
    </entry>
  </row>
  <row>
    <entry>(to) save sth. in sth.</entry>
    <entry/>
    <entry>verb; when either saving a file on a specific device or file
      system
    </entry>
  </row>
  <row>
    <entry>(to) save sth. on sth.</entry>
    <entry/>
    <entry>verb; when either saving a file on a specific device or file
      system
    </entry>
  </row>
  <row>
    <entry>(to) save sth. to sth.</entry>
    <entry/>
    <entry>verb; when either saving a file to a specific folder
    </entry>
  </row>
  <row>
    <entry>saved in sth.</entry>
    <entry/>
    <entry>verb; when retrieving a file from a specific place
    </entry>
  </row> -->

  <term>
    <accept>
      <word>SCSI</word>
    </accept>
    <patterngroup>
      <pattern1>S\.C\.S\.I\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ss]csi</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>screenshot</word>
    </accept>
    <patterngroup>
      <pattern1>screen-shots?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>screen</pattern1>
      <pattern2>shots?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>screen saver</word>
    </accept>
    <patterngroup>
      <pattern1>screen-?savers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>scrollbar</word>
    </accept>
    <patterngroup>
      <pattern1>scroll-bars?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>scroll-?boxe?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>scrollers?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>slide-boxe?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>scroll</pattern1>
      <pattern2>(boxe?|bar)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>slide</pattern1>
      <pattern2>boxe?s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>select</word>
      <context>text or list entries</context>
    </accept>
    <patterngroup>
      <pattern1>(block|choose?|highlight)(s|ing)?</pattern1>
      <contextpattern mode="fuzzy" where="3">(selection|text|entr(y|ie)|word)s?|##@mono##</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>add(e[ds]?|ing)</pattern1>
      <pattern2>selections?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>add(e[ds]?|ing)</pattern1>
      <pattern2>(a|the)</pattern2>
      <pattern3>selections?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>selected</word>
      <context>text or list entries</context>
    </accept>
    <patterngroup>
      <pattern1>highlighted</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(blocked|chosen)</pattern1>
      <contextpattern mode="fuzzy" where="3">(selection|text|entr(y|ie)|word)s?|##@mono##</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>self-?e(vident|xplanator[iy])(ly)?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>set up</word>
    </accept>
    <patterngroup>
      <pattern1>set-?upp?(ed|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>set-?up</pattern1>
      <contextpattern look="before">(to|not|is|was|be(en)?|will|ha(s|d|ve)|(we|a)re|can|could|may|might|shall|should)</contextpattern>
      <contextpattern match="negative">(and|or)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>setup</word>
    </accept>
    <patterngroup>
      <pattern1>set-ups?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>set</pattern1>
      <pattern2>ups?</pattern2>
      <!-- 'And' and 'or' are ambiguous. -->
      <contextpattern look="before" match="negative" mode="fuzzy" where="2">(when|if|not|is|was|be(en)?|will|ha(s|d|ve)|(we|a)re|can|could|may|might|shall|should|and|or)</contextpattern>
      <contextpattern look="before" match="negative" mode="fuzzy" where="3">to</contextpattern>
      <!-- I should negative-check for any attributes/adverbs following, the
           following is a far cry from being complete but makes the checker
           shut up in one situation... -->
      <contextpattern match="negative">(the|an?|in|for|on|at|your|new|old|large|small|better|worse|more|less|most|least)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>shut down</word>
    </accept>
    <patterngroup>
      <pattern1>shut-?down(ed|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>shut-?downs?</pattern1>
      <contextpattern>(the|an?)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>shut-?downs?</pattern1>
      <contextpattern look="before">(be|is|are|were|would|will|not|to|could|ha(s|d|ve)|should)</contextpattern>
      <contextpattern match="negative">(and|or)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>shutt?(s|ed|ing)-?down</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>shutdown</word>
    </accept>
    <patterngroup>
      <pattern1>shut-downs?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>shut</pattern1>
      <pattern2>downs</pattern2>
      <contextpattern look="before" match="negative" mode="fuzzy" where="2">(when|if|not|is|was|be(en)?|will|ha(s|d|ve)|(we|a)re|can|could|may|might|shall|should)</contextpattern>
      <contextpattern look="before" match="negative" mode="fuzzy" where="3">to</contextpattern>
      <contextpattern match="negative">(the|an?|in|for|on|at)</contextpattern>
    </patterngroup>
  </term>

  <!-- Might be too much for now -->
  <!-- <row>
    <entry/>
    <entry>simple [filler], simply</entry>
    <entry>adjective, adverb; avoid</entry>
  </row> -->

  <term>
    <accept>
      <word>simplify</word>
    </accept>
    <patterngroup>
      <pattern1>(facilitat|eas)(e[sd]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SLE</word>
    </accept>
    <patterngroup>
      <pattern1>s\.l\.e\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ss]le</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.?</pattern1>
      <pattern2>(ent(er|re)prise|linux)</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SLED</word>
    </accept>
    <patterngroup>
      <pattern1>s\.l\.e\.d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ss]led</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.d\.?</pattern1>
      <pattern2>(ent(er|re)prise|linux|desktop)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.?</pattern1>
      <pattern2>desktop</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.?</pattern1>
      <pattern2>desktop</pattern2>
      <pattern3>linux</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SLES</word>
    </accept>
    <patterngroup>
      <pattern1>s\.l\.e\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ss]les</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.s\.?</pattern1>
      <pattern2>(ent(er|re)prise|linux|server)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.?</pattern1>
      <pattern2>server</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.?l\.?e\.?</pattern1>
      <pattern2>server</pattern2>
      <pattern3>linux</pattern3>
    </patterngroup>
  </term>


  <term>
    <accept>
      <word>slider</word>
    </accept>
    <patterngroup>
      <pattern1>slidebars?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>slide</pattern1>
      <pattern2>bars?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>spec file</word>
    </accept>
    <patterngroup>
      <pattern1>spec-?files?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>solid-state drive</word>
    </accept>
    <patterngroup>
      <pattern1>solid-?state-?d(rive|isk)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>solidstate</pattern1>
      <pattern2>drives?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>solid-?state</pattern1>
      <pattern2>disks?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>solid</pattern1>
      <pattern2>state</pattern2>
      <pattern3>d(rive|isk)s?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SSD</word>
    </accept>
    <patterngroup>
      <pattern1>s\.s\.s(\.?s)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ssd</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SSH</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ss]sh</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.s\.h\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ssh</pattern1>
      <pattern2>shells?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>stand-alone</word>
    </accept>
    <patterngroup>
      <pattern1>standalone</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>stand</pattern1>
      <pattern2>alone</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>start up</word>
    </accept>
    <patterngroup>
      <pattern1>start-?upp?(ed|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>start(ed|s|ing)-?up</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>start-?up</pattern1>
      <contextpattern look="before">(to|not|is|was|be(en)?|will|ha(s|d|ve)|(we|a)re|can|could|may|might|shall|should)</contextpattern>
      <contextpattern match="negative">(and|or)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>startup</word>
    </accept>
    <patterngroup>
      <pattern1>start-ups?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>start</pattern1>
      <pattern2>ups?</pattern2>
      <!-- 'And' and 'or' are ambiguous. -->
      <contextpattern look="before" match="negative" mode="fuzzy" where="2">(when|if|not|is|was|be(en)?|will|ha(s|d|ve)|(we|a)re|can|could|may|might|shall|should|and|or)</contextpattern>
      <contextpattern look="before" match="negative" mode="fuzzy" where="3">to</contextpattern>
      <!-- I should negative-check for any attributes/adverbs following, the
           following is a far cry from being complete but makes the checker
           shut up in one situation... -->
      <contextpattern match="negative">(the|an?|in|for|on|at|your|new|old|large|small|better|worse|more|less|most|least)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>statusbar</word>
    </accept>
    <patterngroup>
      <pattern1>stat(us|e)-bars?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>stat(us|e)</pattern1>
      <pattern2>bars?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>stuffs?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ss]u[Ss][Ee]</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>s\.u\.s\.e\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>software-?</pattern1>
      <pattern2>und</pattern2>
      <pattern3>system-?entwicklung</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>software-?</pattern1>
      <pattern2>und</pattern2>
      <pattern3>system</pattern3>
      <pattern4>entwicklung</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE Cloud</word>
    </accept>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>(linux|ent(er|re)prise)</pattern2>
      <pattern3>cloud</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE Linux Enterprise</word>
    </accept>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>ent(er|re)prise</pattern2>
      <pattern3>linux</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>ent(er|re)prise</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>linux</pattern2>
      <contextpattern match="negative">(ent(er|re)prise|products|gmbh|ag)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2 case="keep">ent(er|re)prise</pattern2>
      <pattern3 case="keep">linux</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE Linux Enterprise Desktop</word>
    </accept>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>linux</pattern2>
      <pattern3>enterprise</pattern3>
      <pattern4 case="keep">desktop</pattern4>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>linux</pattern2>
      <pattern3>enterprise</pattern3>
      <pattern4 case="keep">DESKTOP</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE Linux Enterprise Server</word>
    </accept>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>linux</pattern2>
      <pattern3>enterprise</pattern3>
      <pattern4 case="keep">server</pattern4>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2>linux</pattern2>
      <pattern3>enterprise</pattern3>
      <pattern4 case="keep">SERVER</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE Manager</word>
    </accept>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2 case="keep">manager</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2 case="keep">MANAGER</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>suse-?manager</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>SUSE Studio</word>
    </accept>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2 case="keep">studio</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>suse</pattern1>
      <pattern2 case="keep">STUDIO</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>suse-?studio</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>submenu</word>
    </accept>
    <patterngroup>
      <pattern1>sub</pattern1>
      <pattern2>menus?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>sub-menus?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>symbolic link</word>
    </accept>
    <patterngroup>
      <pattern1>(sym|soft)</pattern1>
      <pattern2>links?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>(soft|sym(bolic)?)-?links?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>synchronize</word>
    </accept>
    <patterngroup>
      <pattern1>synch?(ronis)?(ed|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>synchronization</word>
    </accept>
    <patterngroup>
      <pattern1>synch?(ronis)?(ation)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>TAR archive</word>
    </accept>
    <patterngroup>
      <pattern1>tar</pattern1>
      <pattern2>balls?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Tt]ar</pattern1>
      <pattern2>archives?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>tar-?(archive|ball)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>taskbar</word>
    </accept>
    <patterngroup>
      <pattern1>task</pattern1>
      <pattern2>bars?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>task-bars?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>text box</word>
    </accept>
    <patterngroup>
      <pattern1>text</pattern1>
      <pattern2>(area|field)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>(input|entry)</pattern1>
      <pattern2>(boxe?|area|field)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>text</pattern1>
      <pattern2>(entry|input)</pattern2>
      <pattern3>(boxe?|area|field)s?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>(text|entry|input)-(boxe?|area|field)s?</pattern1>
    </patterngroup>
  </term>

  <!-- Good idea?-->
  <term>
    <accept>
      <word>terminate</word>
    </accept>
    <patterngroup>
      <pattern1>kill(ed|s|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>TFTP</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Tt]ftp(?!:)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>t\.f\.t\.p\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>time stamp</word>
    </accept>
    <patterngroup>
      <pattern1>time-?stamps?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>titlebar</word>
    </accept>
    <patterngroup>
      <pattern1>title</pattern1>
      <pattern2>bars?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>title-bars?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>toolbar</word>
    </accept>
    <patterngroup>
      <pattern1>tool</pattern1>
      <pattern2>bars?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>tool-bars?</pattern1>
    </patterngroup>
  </term>

  <!-- This one should have more rejects. -->
  <term>
    <accept>
      <word>tooltip</word>
    </accept>
    <patterngroup>
      <pattern1>tool</pattern1>
      <pattern2>tips?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>tool-tips?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Unix</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">UNIX</pattern1>
      <contextpattern look="before" match="negative">sco</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>u\.n\.i\.x\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>uninstall</word>
    </accept>
    <patterngroup>
      <pattern1>de-?install(ed|s|ing)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>un-install(ed|s|ing)?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>unselected</word>
      <context>text or list entries</context>
    </accept>
    <patterngroup>
      <pattern1>(de|un)-highlighted</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(un-|de-?)selected|(un|de)-(blocked|chosen)</pattern1>
      <contextpattern mode="fuzzy" where="3">(selection|text|entr(y|ie)|word)s?|##@mono##</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>usage</word>
    </accept>
    <patterngroup>
      <pattern1>utili[sz]ations?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>use</word>
    </accept>
    <patterngroup>
      <pattern1>utili[sz](e[ds]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>uppercase</word>
    </accept>
    <patterngroup>
      <pattern1>upper-case(s|ing)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>upper</pattern1>
      <pattern2>case(s|ing)?</pattern2>
    </patterngroup>
  </term>

  <!--  uppercase_d_ is almost always an adjective => avoid confusing writers.
  -->
  <term>
    <accept>
      <word>uppercased</word>
    </accept>
    <patterngroup>
      <pattern1>upper-cased</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>upper</pattern1>
      <pattern2>cased</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>user name</word>
    </accept>
    <patterngroup>
      <pattern1>usernames?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>user-names?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>video CD</word>
    </accept>
    <patterngroup>
      <pattern1>video-?cds?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>cd-?videos?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>cd</pattern1>
      <pattern2>videos?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>virtualize</word>
    </accept>
    <patterngroup>
      <pattern1>virtualis(e[ds]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>virtualization</word>
    </accept>
    <patterngroup>
      <pattern1>virtualisation</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>VLAN</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Vv]lan</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>v\.l\.a\.n\.?</pattern1>
    </patterngroup>
  </term>

  <!-- Don't check for WWW and World Wide Web, there legitimate uses. -->
  <term>
    <accept>
      <word>Web</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">web</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">WEB</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Web page</word>
    </accept>
    <patterngroup>
      <pattern1>html</pattern1>
      <pattern2>web</pattern2>
      <pattern3>pages?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>web-?pages?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Web server</word>
    </accept>
    <patterngroup>
      <pattern1>web-?servers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Web site</word>
    </accept>
    <patterngroup>
      <pattern1>web-?sites?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Webmaster</word>
    </accept>
    <patterngroup>
      <pattern1>web-masters?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>web</pattern1>
      <pattern2>masters?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>want</word>
    </accept>
    <patterngroup>
      <pattern1>wish(ed|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>wish(ed|ing|s)?</pattern1>
      <pattern2>for</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>would</pattern1>
      <pattern2>like</pattern2>
    </patterngroup>
  </term>

  <!-- We already recommend after in that situation. -->
  <!-- <row>
    <entry>when</entry>
    <entry>once</entry>
    <entry>adverb; use <emphasis>once</emphasis> only in the meaning
      <quote>one time only</quote>
    </entry>
  </row> -->

  <!-- Not sure how to check. -->
  <!-- <row>
    <entry>when</entry>
    <entry/>
    <entry>pronoun; use if an event is inevitable; also see
      <emphasis>if</emphasis>
    </entry>
  </row> -->

  <!-- Not sure how to check for the finer points here. -->
  <term>
    <accept>
      <word>whether</word>
    </accept>
    <patterngroup>
      <pattern1>whether</pattern1>
      <pattern2>or</pattern2>
      <pattern3>not</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Wi-Fi</word>
    </accept>
    <patterngroup>
      <pattern1>w\.?l\.?a\.?n\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>wifi</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">wi-[Ff]i</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">Wi-fi</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>wi(reless)?</pattern1>
      <pattern2>fi(delity)?</pattern2>
    </patterngroup>
  </term>

  <!--  This term is more generic, so don't recommed Wi-Fi card, hoping for
        some common sense.
  -->
  <term>
    <accept>
      <word>Wi-Fi/Bluetooth card</word>
    </accept>
    <patterngroup>
      <pattern1>wireless</pattern1>
      <pattern2>cards?</pattern2>
    </patterngroup>
  </term>

  <!-- We should barely need this -->
  <!-- <term>
    <accept>
      <word>WLAN</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ww]lan</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>wild card</word>
    </accept>
    <patterngroup>
      <pattern1>(wild-?card|joker)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>write</word>
    </accept>
    <patterngroup>
      <pattern1>pipe(s|d|ing)?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>X Window System</word>
    </accept>
    <patterngroup>
      <pattern1>x</pattern1>
      <pattern2 case="keep">Window</pattern2>
      <pattern3>system</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>x</pattern1>
      <pattern2>window</pattern2>
      <pattern3 case="keep">System</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>x</pattern1>
      <pattern2>windows?</pattern2>
      <pattern3>system</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>X</pattern1>
      <pattern2>Windows</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Xen</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">xen</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">XEN</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Xend</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">xend</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">XEND</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>YaST</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">YAST</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Yy]ast</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>yast2</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Zypper</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">ZYPPER</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">zypper</pattern1>
    </patterngroup>
  </term>

</terminology>
