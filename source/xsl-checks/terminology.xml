<?xml version="1.0" encoding="UTF-8"?>
<terminology ignoredwords="(the|a|an|this|there|that|these|those|one|by|on|over|under|about|to|at|in|from)">
<!-- Make sure to change the id when creating a new terminology file. -->

  <term>
    <accept>
      <word>32-bit</word>
    </accept>
    <patterngroup>
      <pattern1>32bit</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>32</pattern1>
      <pattern2>bit</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>3D</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">3d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>3[-\.]d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>three[-\.]*d\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(three|3)\.?</pattern1>
      <pattern2>d\.?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>64-bit</word>
    </accept>
    <patterngroup>
      <pattern1>64bit</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>64</pattern1>
      <pattern2>bit</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>activate</word>
      <context>check boxes</context>
    </accept>
    <patterngroup>
      <pattern1>(block|check|tick)(ing|ed|s)</pattern1>
      <contextpattern mode="fuzzy" where="2">((check|tick|option|box)e?s?|##@ui##)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>((block|check|tick)(ing|ed|s)|cho?os(es?|ing|n))</pattern1>
      <contextpattern mode="fuzzy" where="2">(check|tick)s?</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>((block|check|tick)(ing|ed|s)|cho?os(es?|ing|n))</pattern1>
      <contextpattern look="before" mode="fuzzy" where="2">(check|tick|option|box)e?s?</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>add-on</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Aa]dd-Ons?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ADD-ON[Ss]?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>addons?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>add</pattern1>
      <pattern2>ons?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>address book</word>
    </accept>
    <patterngroup>
      <pattern1>addressbooks?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>advice</word>
    </accept>
    <patterngroup>
      <pattern1>advise</pattern1>
      <contextpattern look="before">(an|the)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>advisory</word>
    </accept>
    <patterngroup>
      <pattern1>advicor(y|ies)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>advise</word>
    </accept>
    <patterngroup>
      <pattern1>advic(e[sd]|ing)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>advice</pattern1>
      <contextpattern look="before">(we|suse|novell|attachmate|[\-a-z]*?ly)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>after</word>
      <context>time</context>
    </accept>
    <patterngroup>
      <pattern1>once</pattern1>
      <contextpattern>(the|a|an|it|they)</contextpattern>
    </patterngroup>
  </term>

  <!-- Not sure how to best get these in. -->
  <!-- <row>
    <entry>although</entry>
    <entry>while</entry>
    <entry>conjunction; only use <emphasis>while</emphasis> in the
      meaning of <quote>during the time that</quote>
    </entry>
  </row> -->
  <!-- <row>
    <entry>and</entry>
    <entry>while</entry>
    <entry>conjunction; only use <emphasis>while</emphasis> in the
      meaning of <quote>during the time that</quote>
    </entry>
  </row> -->

  <term>
    <accept>
      <word>appendixes</word>
    </accept>
    <patterngroup>
      <pattern1>appendices</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Audio CD</word>
    </accept>
    <patterngroup>
      <pattern1>audio-?cds?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>cd-?audios?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">audio</pattern1>
      <pattern2>cds?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>cd</pattern1>
      <pattern2>audios?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>back-end</word>
    </accept>
    <patterngroup>
      <pattern1>backends?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>back up</word>
    </accept>
    <!-- Backed-up can be used as an adjective. -->
    <patterngroup>
      <pattern1>back(s|ing)-?up</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>back-?upp?(ed|ing)</pattern1>
        <!--  Adding s to the list of endings would erroneously also match the
          plural noun.
        -->
    </patterngroup>
    <!-- <patterngroup>
      <pattern1>back-?ups?</pattern1>
      <contextpattern look="before">to</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>back-?ups?</pattern1>
      <contextpattern>(them|these|this|it|the|a|an)</contextpattern>
    </patterngroup> -->
  </term>

  <term>
    <accept>
      <word>backup</word>
    </accept>
    <patterngroup>
      <pattern1>back-ups?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>back</pattern1>
      <pattern2>ups?</pattern2>
      <contextpattern look="before">(the|a|local|remote|system|full|partial|automatic|manual|daily|hourly|monthly|yearly)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Bash</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">bash(?!.)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">BASH(?!.)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b\.a\.s\.h\.?(?!.)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>basically</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>because of</word>
    </accept>
    <patterngroup>
      <pattern1>(due|owing)</pattern1>
      <pattern2>to</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>boot disk</word>
    </accept>
    <patterngroup>
      <pattern1>boot-?disks?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>boot loader</word>
    </accept>
    <patterngroup>
      <pattern1>boot-?loaders?</pattern1>
      <!-- avoid matching the expansion of GRUB here -->
      <contextpattern look="before" match="negative">unified</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>boot using PXE</word>
    </accept>
    <patterngroup>
      <pattern1>PXE</pattern1>
      <pattern2>boot(ing|ed)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>PXE</pattern1>
      <pattern2>boots?</pattern2>
      <contextpattern look="before">(to|not)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Btrfs</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">btrfs</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">BTRFS</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b\.t\.r\.f\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b[eu]tterfs</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>b[eu]tter</pattern1>
      <pattern2>(fs|filesystem)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>b[eu]tter</pattern1>
      <pattern2>file</pattern2>
      <pattern3>system</pattern3>
    </patterngroup>
  </term>

  <!-- Not sure how to check for this the right way. -->
  <!-- <term>
    <accept>
      <word>but</word>
    </accept>
    <patterngroup>
      <pattern1>while</pattern1>
      <contextpattern>(the|a|##@ui##|##@mono##|##@key##)</contextpattern>
    </patterngroup>
  </term> -->

  <!-- Trouble with single quotes. -->
  <!-- <term>
    <accept>
      <word>cannot</word>
    </accept>
    <patterngroup>
      <pattern1>can['Ê¼]t</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>can</pattern1>
      <pattern2>not</pattern2>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>CA</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Ca(?!\.)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">cas?(?!\.)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.a\.?s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>CD</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Cc]ds?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.d\.?s?</pattern1>
    </patterngroup>
  </term>

  <!-- Should probably be ordered before CD... -->
  <term>
    <accept>
      <word>CD-ROM</word>
    </accept>
    <patterngroup>
      <pattern1>c\.d\.-?r\.o\.m\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.?d\.?r\.?o\.?m\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.?d\.?</pattern1>
      <pattern2>r\.?o\.?m\.?s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>case-sensitive</word>
    </accept>
    <patterngroup>
      <pattern1>casesensitive</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>case</pattern1>
      <pattern2>sensitive</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>case-insensitive</word>
    </accept>
    <patterngroup>
      <pattern1>caseinsensitive</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>case</pattern1>
      <pattern2>insensitive</pattern2>
    </patterngroup>
  </term>

  <!-- Not sure how to match for this the right way: only permission-related -->
  <!-- <term>
    <accept>
      <word>can</word>
    </accept>
    <patterngroup>
      <pattern1>may</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>certificate authority</word>
    </accept>
    <patterngroup>
      <pattern1>certific(at(ion|ing)|ied)</pattern1>
      <pattern2>authorit(y|ies)</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>check box</word>
    </accept>
    <patterngroup>
      <pattern1>(check|tick)(ing)?-?(box(es)?|options?)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(tick(ing)?|checking)</pattern1>
      <pattern2>box(es)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>(check|tick)(ing)?</pattern1>
      <pattern2>options?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>checklist</word>
    </accept>
    <patterngroup>
      <pattern1>(check|tick)-lists?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>(check|tick)</pattern1>
      <pattern2>lists?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>check mark</word>
    </accept>
    <patterngroup>
      <pattern1>(check|tick)-marks?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>tick</pattern1>
      <pattern2>marks?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>chipset</word>
    </accept>
    <patterngroup>
      <pattern1>chip-sets?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>chip</pattern1>
      <pattern2>sets?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>click</word>
    </accept>
    <patterngroup>
      <pattern1>click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
  </term>

  <!--  Seems to lead to crashes - maybe because of the &ndash; and some entity
        encoding issue?
  -->
  <term>
    <accept>
      <word>client/server</word>
    </accept>
    <patterngroup>
      <pattern1>client[-+]?server</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>client</pattern1>
      <pattern2>server</pattern2>
    </patterngroup>
  </term>

  <!-- This might be too generic. -->
  <term>
    <accept>
      <word>close</word>
      <context>application</context>
    </accept>
    <patterngroup>
      <pattern1>((abort|exit)(ed|ing|s)?|terminat(ed?|es|ing))</pattern1>
      <contextpattern mode="fuzzy" where="3">(window|dialog(ue)|app(lication)?|software|program(me))s?</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Common Unix Printing System</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Common</pattern1>
      <pattern2 case="keep">UNIX</pattern2>
      <pattern3 case="keep">Printing</pattern3>
      <pattern4 case="keep">System</pattern4>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">common</pattern1>
      <pattern2>unix</pattern2>
      <pattern3 case="keep">printing</pattern3>
      <pattern4 case="keep">system</pattern4>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>command line</word>
    </accept>
    <patterngroup>
      <pattern1>command-?lines?</pattern1>
    </patterngroup>
  </term>

  <!--  Not sure doing this does any good. It's also producing false positives.
  -->
  <!-- <term>
    <accept>
      <word>computer</word>
    </accept>
    <patterngroup>
      <pattern1>machines?</pattern1>
      <contextpattern look="before" match="negative">virtual</contextpattern>
    </patterngroup>
  </term> -->

  <!-- FIXME: add a rule to find the noun too -->
  <!-- <term>
    <accept>
      <word>configure</word>
    </accept>
    <patterngroup>
      <pattern1>conf(ig)?(ed|ing|s)?</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>control center</word>
    </accept>
    <patterngroup>
      <pattern1>control-?centers?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">Control</pattern1>
      <pattern2 case="keep">Centers?</pattern2>
    </patterngroup>
  </term>

  <!-- Note sure how to test best -->
  <!-- <term>
    <accept>
      <word>could</word>
    </accept>
    <entry>may</entry>
    <entry>verb; use <emphasis>could</emphasis> to express a
      possibility, only use <emphasis>may</emphasis> to express
      permissions sought/given
    </entry>
  </term> -->

  <term>
    <accept>
      <word>CUPS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Cups</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">cups</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.?u\.?p\.?s\.?</pattern1>
      <pattern2>print(ing)?</pattern2>
      <pattern3>system</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>c\.u\.p\.s\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>deactivate</word>
      <context>check boxes</context>
    </accept>
    <patterngroup>
      <pattern1>(un|de)-?(block|check|tick)(ing|ed|s)</pattern1>
      <contextpattern mode="fuzzy" where="2">((check|tick|option|box)e?s?|##@ui##)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>(un|de)-?((block|check|tick|deselect)(ing|ed|s)|ch[o]?os(e[s]?|ing|n))</pattern1>
      <contextpattern mode="fuzzy" where="2">(check|tick|option|box)e?s?</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>deselect</word>
      <context>text or list entries</context>
    </accept>
    <patterngroup>
      <pattern1>(de|un)-select</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>unselect</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>remov(e[ds]?|ing)</pattern1>
      <pattern2>selections?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>remov(e[ds]?|ing)</pattern1>
      <pattern2>(a|the)</pattern2>
      <pattern3>selections?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>DHCP</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">dhcp</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">Dhcp</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>d\.h\.c\.p\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>dial-up</word>
    </accept>
    <patterngroup>
      <pattern1>dialup</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>dial</pattern1>
      <pattern2>up</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>dialog</word>
    </accept>
    <patterngroup>
      <pattern1>dialogues?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>dialog(box|window)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>dialog(ue)?</pattern1>
      <pattern2>(box|window)s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>directory</word>
    </accept>
    <patterngroup>
      <pattern1>(dir|folder)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>DNS</word>
    </accept>
    <patterngroup>
      <pattern1>d\.n\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>DNS</pattern1>
      <pattern2>name</pattern2>
      <pattern3>servers?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>double-click</word>
    </accept>
    <patterngroup>
      <pattern1>doubleclick(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>double</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>double-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>double</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>DVD</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Dd]vd</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>d\.v\.d\.?s?</pattern1>
    </patterngroup>
  </term>
  <term>
    <accept>
      <word>dynamic name server</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Dynamic</pattern1>
      <pattern2 case="keep">Name</pattern2>
      <pattern3 case="keep">Servers?</pattern3>
    </patterngroup>
  </term>
  <term>
    <accept>
      <word>Ethernet</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">ethernet</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>e-book</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EBOOK[Ss]?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ebooks?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>electronic</pattern1>
      <pattern2>books?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>EPUB</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ee][Pp]ub</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ePUB</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>e-pub</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>e-mail</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EMAIL[Ss]?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>emails?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>electronic</pattern1>
      <pattern2>mails?</pattern2>
    </patterngroup>
  </term>

  <!-- Might overreach. -->
  <!-- <term>
    <accept/>
    <pattern1>easy [filler], easily</pattern1>
  </term> -->

  <term>
    <accept>
      <word>end user</word>
    </accept>
    <patterngroup>
      <pattern1>end-users?</pattern1>
    </patterngroup>
  </term>

  <!-- Not sure how to best test. -->
  <!-- <term>
    <accept>
      <word>etc.</word>
    </accept>
    <match/>
  </term> -->

  <!-- Spelled out "two," "three," "four" also relevant? -->
  <term>
    <accept>
      <word>Ext2</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EXT2</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ext2</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext-2</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext</pattern1>
      <pattern2>2</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Ext3</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EXT3</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ext3</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext-3</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext</pattern1>
      <pattern2>3</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Ext4</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">EXT4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">ext4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext-4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>ext</pattern1>
      <pattern2>4</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept/>
    <patterngroup>
      <pattern1>facilitat(e[sd]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>file name</word>
    </accept>
    <patterngroup>
      <pattern1>file-?names?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>file server</word>
    </accept>
    <patterngroup>
      <pattern1>file-?servers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>file system</word>
    </accept>
    <patterngroup>
      <pattern1>file-?systems?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>flavor</word>
    </accept>
    <patterngroup>
      <pattern1>flavours?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>flash disk</word>
    </accept>
    <patterngroup>
      <pattern1>(flash|usb)</pattern1>
      <pattern2>(disk|drive|stick)s?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>usb</pattern1>
      <pattern2>flash</pattern2>
      <pattern3>(disk|drive|stick)s?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>(flash|usb)-?(flash)?-?(disk|drive|stick)s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>framebuffer</word>
    </accept>
    <patterngroup>
      <pattern1>frame-buffers?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>frame</pattern1>
      <pattern2>buffers?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>front-end</word>
    </accept>
    <patterngroup>
      <pattern1>frontends?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>front</pattern1>
      <pattern2>ends?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>The GIMP</word>
    </accept>
    <patterngroup>
      <pattern1>g\.?i\.?m\.?p\.?(?!.)</pattern1>
      <contextpattern look="before" match="negative">the</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">the</pattern1>
      <pattern2>g\.?i\.?m\.?p\.?(?!.)</pattern2>
      <contextpattern case="keep" look="before">the</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.i\.m\.p\.?(?!.)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Gg]imp(?!.)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>GNOME</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Gg]nome(?!.)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.n\.o\.m\.e\.?(?!.)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>GNU</pattern1>
      <pattern2>Networked</pattern2>
      <pattern3>Object</pattern3>
      <pattern4>Model</pattern4>
      <pattern5>Environment</pattern5>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>GRUB</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Gg]rub</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.r\.u\.b\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>graphical user interface</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Graphical</pattern1>
      <pattern2 case="keep">Users?</pattern2>
      <pattern3 case="keep">Interfaces?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>GUI</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Gg]uis?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>g\.u\.i\.?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>gui</pattern1>
      <pattern2>interfaces?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>gui</pattern1>
      <pattern2>users?</pattern2>
      <pattern3>interfaces?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hard disk</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh][Dd][Dd]?s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hardd?(isk|rive)s?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hard</pattern1>
      <pattern2>drives?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>hard</pattern1>
      <pattern2>disk</pattern2>
      <pattern3>drives?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hard link</word>
    </accept>
    <patterngroup>
      <pattern1>hard-?links?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>home page</word>
    </accept>
    <patterngroup>
      <pattern1>home-?pages?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>host name</word>
    </accept>
    <patterngroup>
      <pattern1>hostnames?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>host-names?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hotplug</word>
    </accept>
    <patterngroup>
      <pattern1>hot-plugg?(ing|ed|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>plugg?(ing|ed|s)</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hotplugging</word>
    </accept>
    <patterngroup>
      <pattern1>hot-plugging</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>plugging</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hotpluggable</word>
    </accept>
    <patterngroup>
      <pattern1>hot-pluggable</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hot</pattern1>
      <pattern2>pluggable</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>HTTP</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh]ttp</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>h\.t\.t\.p\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>HTTPS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Hh]ttps</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>h\.t\.t\.p\.s\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>hypervisor</word>
    </accept>
    <patterngroup>
      <pattern1>hyper-vi[sz]ors?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hyper-?vizors?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>hyper</pattern1>
      <pattern2>vi[sz]ors?</pattern2>
    </patterngroup>
  </term>

  <!-- Not sure what to check -->
  <!-- <term>
    <accept>
    <word>if</word>
  </accept>
  </term> -->

  <term>
    <accept>
      <word>indexes</word>
    </accept>
    <patterngroup>
      <pattern1>indices</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>infrared</word>
    </accept>
    <patterngroup>
      <pattern1>infra-red</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>infra</pattern1>
      <pattern2>red</pattern2>
    </patterngroup>
  </term>

  <!-- FIXME: add a rule to find the noun too -->
  <!-- <term>
    <accept>
      <word>initialize</word>
    </accept>
    <patterngroup>
      <pattern1>init(ed|s|ing)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>initialis(e?[ds]?|ing)?</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>installation source</word>
    </accept>
    <patterngroup>
      <pattern1>installation</pattern1>
      <pattern2>data</pattern2>
      <pattern3>sources?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>installation</pattern1>
      <pattern2>medi(a|um)s?</pattern2>
        <!--  Yes, the s? is completely incorrect. Doesn't hurt to match simple
              typos, though. -->
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Internet</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">internets?</pattern1>
    </patterngroup>
  </term>

  <!-- Sentence beginnings..? -->
  <!-- <term>
    <accept>
    <word>intranet</word>
  </accept>
    <patterngroup>
      <pattern1>Intranet</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>I/O port</word>
    </accept>
    <patterngroup>
      <pattern1>i[-\.]?o\.?</pattern1>
      <pattern2>ports?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>IPsec</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">IPSEC</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">[Ii]psec</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">i\.p\.s\.e\.c\.?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>IPv4</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ii]pv4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.p\.v\.?4</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?4</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?</pattern2>
      <pattern3>4</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>IPv6</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">[Ii]pv6</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.p\.v\.?6</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?6</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>i\.?p\.?</pattern1>
      <pattern2>v\.?</pattern2>
      <pattern3>6</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>journal</word>
    </accept>
    <patterngroup>
      <pattern1>journall(ed|ing)</pattern1>
    </patterngroup>
  </term>

  <!-- Could be a bit broad for now. -->
  <!-- <term>
    <accept/>
    <patterngroup>
      <pattern1>just</pattern1>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>Kdump</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">KDUMP</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">kdump</pattern1>
    </patterngroup>
  </term>

  <!-- Not sure doing this is doing any good -->
  <!-- <term>
    <accept>
      <word>Kernel</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">kernel</pattern1>
      <contextpattern look="before" match="negative">(linux|windows|mac|x|.*?bsd)</contextpattern>
    </patterngroup>
  </term> -->

  <term>
    <accept>
      <word>Kprobes</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">KPROBES</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">kprobes</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>key combination</word>
    </accept>
    <patterngroup>
      <pattern1>key(board)?</pattern1>
      <pattern2>(accelerator|combo|shortcut)s?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>left-click</word>
    </accept>
    <patterngroup>
      <pattern1>leftclick(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>left</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>left-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>left</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>license</word>
    </accept>
    <patterngroup>
      <pattern1>licenc(e[ds]?|ing)</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>local host</word>
    </accept>
    <patterngroup>
      <pattern1>local-?hosts?</pattern1>
      <contextpattern look="before">a</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>localhost</word>
    </accept>
    <patterngroup>
      <pattern1>local-hosts?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>local</pattern1>
      <pattern2>hosts?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>log file</word>
    </accept>
    <patterngroup>
      <pattern1>log-?files?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>login</word>
    </accept>
    <patterngroup>
      <pattern1>log-[io]ns?</pattern1>
      <contextpattern>(to|not)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign-[io]ns?</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <!-- <patterngroup>
      <pattern1>log</pattern1>
      <pattern2>[io]ns?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign</pattern1>
      <pattern2>[io]ns?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
      <contextpattern match="negative" >(the|a|an|to|at)</contextpattern>
    </patterngroup> -->
  </term>


  <term>
    <accept>
      <word>log in</word>
    </accept>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <!-- <patterngroup>
      <pattern1>(logg?|sign)(ed|ing|s)?-?[io]n</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup> -->
    <!-- don't match sentences like: Note the > sign in the boot entry. -->
    <!-- <patterngroup>
      <pattern1>(sign|log)-?[io]n(ed|ing|s)?</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup> -->
    <patterngroup>
      <pattern1>sign(ed|ing|s)?</pattern1>
      <pattern2>[io]n</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>on</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>log in to</word>
    </accept>
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>into</pattern2>
    </patterngroup>
    <!-- "log in at the console" is ~correct -->
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>in</pattern2>
      <pattern3>at</pattern3>
      <contextpattern where="3" mode="fuzzy" match="negative">console</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>logout</word>
    </accept>
    <patterngroup>
      <pattern1>log-o(ut|ff)s?</pattern1>
      <contextpattern>(to|not)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign-o(ut|ff)s?</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not)</contextpattern>
      <contextpattern match="negative">(the|a|an)</contextpattern>
    </patterngroup>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <!-- <patterngroup>
      <pattern1>log</pattern1>
      <pattern2>o(ut|ff)s?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>sign</pattern1>
      <pattern2>o(ut|ff)s?</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(to|not|try|avoid)</contextpattern>
      <contextpattern match="negative">(the|a|an|off|from)</contextpattern>
    </patterngroup> -->
  </term>

  <term>
    <accept>
      <word>log out</word>
    </accept>
    <!--  These overreach quite a bit and are not very useful right now. Maybe
          use positive contextpatterns instead. -->
    <!-- <patterngroup>
      <pattern1>(logg?|sign)(ed|ing|s)?-?o(ut|ff)</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>(sign|log)-?o(ut|ff)(ed|ing|s)?</pattern1>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup> -->
    <patterngroup>
      <pattern1>sign(ed|ing|s)?</pattern1>
      <pattern2>o(ff|ut)</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>off</pattern2>
      <contextpattern look="before" match="negative" where="2" mode="fuzzy">(the|a)</contextpattern>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>log out of</word>
    </accept>
    <!-- "log in from" is always correct, so this pattern's MMV. -->
    <patterngroup>
      <pattern1>logg?(ed|ing|s)?</pattern1>
      <pattern2>o(ff|ut)</pattern2>
      <pattern3>from</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>loopback device</word>
    </accept>
    <patterngroup>
      <pattern1>loop-?back-?devices?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>loop-back</pattern1>
      <pattern2>devices?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>loop</pattern1>
      <pattern2>back</pattern2>
      <pattern3>devices?</pattern3>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>lowercase</word>
    </accept>
    <patterngroup>
      <pattern1>lower-case(d|s|ing)?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>lower</pattern1>
      <pattern2>case(d|s|ing)?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>mail server</word>
    </accept>
    <patterngroup>
      <pattern1>mail-servers?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mail</pattern1>
      <pattern2>servers?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>Maildir</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">maildir</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mail-dir</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mail</pattern1>
      <pattern2>dir</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>mainboard</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">motherboards?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>m(ain|other)-boards?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>m(ain|other)</pattern1>
      <pattern2>boards?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>man page</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">Man</pattern1>
      <pattern2>pages?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>man-?pages?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>meta data</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">meta</pattern1>
      <pattern2>datas</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1 case="keep">meta</pattern1>
      <pattern2>dates?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>meta-?dat[ae]s?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>middle-click</word>
    </accept>
    <patterngroup>
      <pattern1>middleclick(ed|ing|s)</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>middle</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>middle-?click(ed|ing|s)</pattern1>
      <pattern2>on(to)?</pattern2>
    </patterngroup>
    <patterngroup>
      <pattern1>middle</pattern1>
      <pattern2>click(ed|ing|s)</pattern2>
      <pattern3>on(to)?</pattern3>
    </patterngroup>
  </term>

  <!-- <row>
    <entry>might</entry>
    <entry>may</entry>
    <entry>verb; use <emphasis>might</emphasis> to express a
      possibility, only use <emphasis>may</emphasis> to express
      permissions sought/given
    </entry>
  </row> -->

  <term>
    <accept>
      <word>mount point</word>
    </accept>
    <patterngroup>
      <pattern1>mount-?points?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>mouse button</word>
    </accept>
    <patterngroup>
      <pattern1>mouse-?keys?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mouse-buttons?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mouse</pattern1>
      <pattern2>(button|key)s?</pattern2>
    </patterngroup>
  </term>

  <!-- Exclude -ing form since that is almost exclusively meant as a noun -->
  <term>
    <accept>
      <word>multitask</word>
    </accept>
    <patterngroup>
      <pattern1>multi-task(e[ds])?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>multi</pattern1>
      <pattern2>task(e[ds])?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>multitasking</word>
    </accept>
    <!--  Multitaskings is so delightfully incorrect... not sure what to best
          do with it. -->
    <patterngroup>
      <pattern1>multi-taskings?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>multi</pattern1>
      <pattern2>taskings?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>multiuser</word>
    </accept>
    <patterngroup>
      <pattern1>multi-user</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>mouse</pattern1>
      <pattern2>user</pattern2>
    </patterngroup>
  </term>

  <!-- Exclude this and recommend need to instead. -->
  <!-- <row>
    <entry>must</entry>
    <entry>have to</entry>
    <entry>verb; see also <emphasis>need to</emphasis></entry>
  </row> -->

  <term>
    <accept>
      <word>name server</word>
    </accept>
    <patterngroup>
      <pattern1>name-?servers?</pattern1>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>need to</word>
    </accept>
    <patterngroup>
      <pattern1>ha(ve|d|s)</pattern1>
      <pattern2>to</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>NFS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">N\.?f\.?s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>n\.f\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>nfs</pattern1>
      <pattern2>file</pattern2>
      <pattern3>systems?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>nfs</pattern1>
      <pattern2>file-?systems?</pattern2>
    </patterngroup>
  </term>

  <term>
    <accept>
      <word>NIS</word>
    </accept>
    <patterngroup>
      <pattern1 case="keep">N\.?i\.?s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>n\.i\.s\.?</pattern1>
    </patterngroup>
    <patterngroup>
      <pattern1>nis</pattern1>
      <pattern2>information</pattern2>
      <pattern3>services?</pattern3>
    </patterngroup>
    <patterngroup>
      <pattern1>nfs</pattern1>
      <pattern2>information-?services?</pattern2>
    </patterngroup>
  </term>

</terminology>