<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:import href="library.xsl"/>

  <xsl:output method="xml" indent="yes" omit-xml-declaration="yes"/>


  <xsl:template match="*" mode="part-title">Identifiers</xsl:template>

  <xsl:template match="article[not(@id)]|chapter[not(@id)]|reference[not(@id)]|refentry[not(@id)]|appendix[not(@id)]|colophon[not(@id)]|
                         section[not(@id)]|sect1[not(@id)]|sect2[not(@id)]|sect3[not(@id)]|sect4[not(@id)]|sect5[not(@id)]">
    <xsl:if test="not(ancestor::preface or ancestor-or-self::*/@role = 'legal')">
      <result type="error">
        <xsl:call-template name="sourcehint"/>
        <message>Section <xsl:call-template name="createid"/> has no identifier.
        </message>
        <suggestion>Add an <em>id</em> attribute.
        </suggestion>
      </result>
    </xsl:if>
  </xsl:template>

  <xsl:template match="*[@id]">
    <xsl:variable name="id" select="normalize-space(@id)"/>
    <xsl:variable name="id-safe">
      <xsl:call-template name="safecharacters">
        <xsl:with-param name="input" select="$id"/>
      </xsl:call-template>
    </xsl:variable>
    <xsl:variable name="correct-prefix">
      <xsl:choose>
        <xsl:when test="self::appendix">app.</xsl:when>
        <xsl:when test="self::book">book.</xsl:when>
        <xsl:when test="self::co">co.</xsl:when>
        <xsl:when test="self::chapter">cha.</xsl:when>
        <xsl:when test="self::example">ex.</xsl:when>
        <xsl:when test="self::figure">fig.</xsl:when>
        <xsl:when test="self::glossary or self::glossterm">gl.</xsl:when>
        <xsl:when test="self::itemizedlist">il.</xsl:when>
        <xsl:when test="self::listitem">li.</xsl:when>
        <xsl:when test="self::indexterm">idx.</xsl:when>
        <xsl:when test="self::orderedlist">ol.</xsl:when>
        <xsl:when test="self::part">part.</xsl:when>
        <xsl:when test="self::procedure">pro.</xsl:when>
        <xsl:when test="self::qandaset or self::qandadiv or
                        self::qandaentry">qa.</xsl:when>
        <xsl:when test="self::sect1 or self::sect2 or self::sect3 or
                        self::sect4 or self::sect5 or self::sect6 or
                        self::section">sec.</xsl:when>
        <xsl:when test="self::set">set.</xsl:when>
        <xsl:when test="self::step">st.</xsl:when>
        <xsl:when test="self::table">tab.</xsl:when>
        <xsl:when test="self::variablelist">vl.</xsl:when>
        <xsl:when test="self::varlistentry">vle.</xsl:when>
        <xsl:otherwise>?</xsl:otherwise>
      </xsl:choose>
    </xsl:variable>


    <xsl:if test="not(starts-with($id, $correct-prefix)) and
                  not($correct-prefix = '?')">
      <result type="warning">
        <xsl:call-template name="sourcehint"/>
        <message>Identifier of
          <xsl:call-template name="createid"/>
          has an unusual prefix.
        </message>
        <suggestion>Use the prefix
          <em><xsl:value-of select="$correct-prefix"/></em> instead.
        </suggestion>
      </result>
    </xsl:if>

    <xsl:if test="not(string-length($id) = string-length(normalize-space($id-safe)))">
      <xsl:variable name="id-safe-AZ">
        <xsl:call-template name="safecharacters-AZ">
          <xsl:with-param name="input" select="$id"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="id-safe-special">
        <xsl:call-template name="safecharacters-special">
          <xsl:with-param name="input" select="$id"/>
        </xsl:call-template>
      </xsl:variable>
      <xsl:variable name="id-safe-AZ-state"
        select="string-length($id) = string-length(normalize-space($id-safe-AZ))"/>
      <xsl:variable name="id-safe-special-state"
        select="string-length($id) = string-length(normalize-space($id-safe-special))"/>
      <result type="warning">
        <xsl:call-template name="sourcehint"/>
        <message>Identifier
          <xsl:call-template name="createid"/>
          contains
          <xsl:if test="$id-safe-AZ-state = false">
            capital letters<xsl:choose><xsl:when test="$id-safe-special-state != false">.</xsl:when>
              <xsl:otherwise>
                and
              </xsl:otherwise>
            </xsl:choose>
          </xsl:if>
          <xsl:if test="$id-safe-special-state = false">
            special characters.
          </xsl:if>
        </message>
        <xsl:if test="$id-safe-AZ-state = false">
          <suggestion>Use only lowercase letters in identifiers.
          </suggestion>
        </xsl:if>
        <xsl:if test="$id-safe-special-state = false">
          <suggestion>Use only the following special characters in
            identifiers: ._-
          </suggestion>
        </xsl:if>
      </result>
    </xsl:if>
    <xsl:apply-templates/>
  </xsl:template>


</xsl:stylesheet>
