<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="xml" indent="yes" omit-xml-declaration="yes"/>

  <xsl:include href="library.xsl"/>

  <xsl:template match="*" mode="part-title">Computer Elements</xsl:template>


  <xsl:template match="command|replaceable|option|literal|filename">
    <xsl:variable name="length" select="string-length(normalize-space(text()))"/>
    
    <xsl:if test="(self::command/parent::para or self::command/parent::title) and
                  normalize-space(following-sibling::node()[1]) = '' and
                  (local-name(following-sibling::node()[2]) = 'option' or
                   local-name(following-sibling::node()[2]) = 'replaceable')">
      <xsl:variable name="sibling" select="local-name(following-sibling::node()[2])"/>
      <result>
        <xsl:call-template name="sourcehint"/>
        <warning>Command <xsl:call-template name="createid"/>
          is directly followed by <tag><xsl:value-of select="$sibling"/></tag> element.
        </warning>
        <suggestion>Move the <tag><xsl:value-of select="$sibling"/></tag> element within the command.
        </suggestion>
      </result>
    </xsl:if>

    <!-- Deliberately higher than the styleguide asks for. Try to avoid annoying
         people. -->
    <xsl:if test="$length &gt; 50">
      <result>
        <xsl:call-template name="sourcehint"/>
        <warning>
          <tag><xsl:value-of select="local-name(.)"/></tag> element
          <xsl:call-template name="createid"/>
          contains <xsl:value-of select="$length"/> characters.
        </warning>
        <suggestion>Use a <tag>screen</tag> element.
        </suggestion>
      </result>
    </xsl:if>
  </xsl:template>

</xsl:stylesheet>
